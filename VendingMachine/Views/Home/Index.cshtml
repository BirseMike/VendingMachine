<div class="row">
    <div class="page-header">
        <h1></h1>
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        <div>
            <div class="input-group">
                <span class="input-group-addon" id="basic-addon1">Product Code</span>
                <input type="text" class="form-control" placeholder="Enter product Code" aria-describedby="basic-addon1" data-bind="value: EnteredProductCode">
            </div>
        </div>
        <table class="table">
            <tbody id="KeyPad">
                <tr>
                    <td><button data-id="1" class="btn btn-default" data-bind="click: KeyPadPress">1</button></td>
                    <td><button data-id="2" class="btn btn-default" data-bind="click: KeyPadPress">2</button></td>
                    <td><button data-id="3" class="btn btn-default" data-bind="click: KeyPadPress">3</button></td>
                </tr>
                <tr>
                    <td><button data-id="4" class="btn btn-default" data-bind="click: KeyPadPress">4</button></td>
                    <td><button data-id="5" class="btn btn-default" data-bind="click: KeyPadPress">5</button></td>
                    <td><button data-id="6" class="btn btn-default" data-bind="click: KeyPadPress">6</button></td>
                </tr>
                <tr>
                    <td><button data-id="7" class="btn btn-default" data-bind="click: KeyPadPress">7</button></td>
                    <td><button data-id="8" class="btn btn-default" data-bind="click: KeyPadPress">8</button></td>
                    <td><button data-id="9" class="btn btn-default" data-bind="click: KeyPadPress"> 9</button></td>
                </tr>
                <tr>
                    <td><button data-id="Cancel" class="btn btn-warning glyphicon glyphicon-remove" data-bind="click: KeyPadPress"></button></td>
                    <td><button data-id="0" class="btn btn-default" data-bind="click: KeyPadPress">0</button></td>
                    <td><button data-id="Ok" class="btn btn-success glyphicon glyphicon-ok" data-bind="click: KeyPadPress"></button></td>
                </tr>
                <tr>
                    <td colspan="2"><button data-id="Clear" class="btn btn-danger btn-block glyphicon glyphicon-trash" data-bind="click: KeyPadPress"></button></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-6">
        <table id="productTable" class="table">
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Product</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: Products">
                <tr data-bind="css:{ active: $root.SelectedProduct() && $root.SelectedProduct() == Id}">
                    <td data-bind="text: Id"></td>
                    <td data-bind="text: Name"></td>
                    <td data-bind="text: Price"></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-md-3">
        <div class="row">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">To Pay</h3>
                </div>
                <div class="panel-body" data-bind="text: PriceToPay"></div>
            </div>
        </div>
        <div class="row">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h3 class="panel-title">Amount Entered</h3>
                </div>
                <div class="panel-body" data-bind="text: PaidDisplay"></div>
            </div>
        </div>

        <div class="row">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Payment</h3>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <button data-value="5" class="btn btn-default" data-bind="click: CashInserted">$5</button>
                        <button data-value="1" class="btn btn-default" data-bind="click: CashInserted">$1</button>
                        <button data-value="0.25" class="btn btn-default" data-bind="click: CashInserted">25¢</button>
                        <button data-value="0.10" class="btn btn-default" data-bind="click: CashInserted">10¢</button>
                        <button data-value="0.05" class="btn btn-default" data-bind="click: CashInserted">5¢</button>
                    </div>
                    <br />
                    <div class="row">
                        <div class="input-group">
                            <span class="input-group-addon" id="credit-card-addon">Credit Card</span>
                            <input type="text" class="form-control" placeholder="Enter Card Number" aria-describedby="credit-card-addon" data-bind="textInput: CreditCardNo">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <button class="btn btn-danger" data-bind="click: Cancel">Cancel</button>
            <button class="btn btn-primary" data-bind="click: Pay">Pay</button>
        </div>
    </div>
</div>
<div class="row">
    <div style="display:none" class="alert alert-danger" role="alert" data-bind="visible:  HasError, text: ErrorMessage"></div>
    <div style="display:none" class="alert alert-success" role="alert" data-bind="visible:  HasPurchased, text: PurchaseMessage"></div>
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            // Send an AJAX request
            appFolder = "@Url.Content("~/")";

            var productViewModel = function (options) {
                self = this;
                self.Products = ko.observableArray();
                self.EnteredProductCode = ko.observable();
                self.SelectedProduct = ko.observable();
                self.PriceToPay = ko.computed(function () {
                    if (self.SelectedProduct()) {
                        return self.SelectedProduct().Price;
                    }
                    return 0;
                });
                self.CreditCardNo = ko.observable();

                self.HasError = ko.observable(false);
                self.ErrorMessage = ko.observable();
                self.HasPurchased = ko.observable(false);
                self.PurchaseMessage = ko.observable();

                self.BalancePaid = ko.observable(0);
                self.PaidDisplay = ko.computed(function () {
                    return self.BalancePaid().toFixed(2);
                })

                self.KeyPadPress = function (item, event) {
                    var keyValue = $(event.currentTarget).attr('data-id');
                    var value = self.EnteredProductCode() ? self.EnteredProductCode() : "";
                    self.HasError(false);
                    switch (keyValue) {
                        case "Cancel":
                            if (value)
                                if (value.length > 2) {
                                    self.EnteredProductCode(value.substring(0, self.EnteredProductCode().length - 1));
                                }
                                else {
                                    self.EnteredProductCode(null);
                                }
                            break;
                        case "Ok": {
                            self.GetProduct(value);
                        }
                            break;
                        case "Clear": {
                            self.EnteredProductCode(null);
                            self.SelectedProduct(null);
                        }
                            break; default:
                                self.EnteredProductCode(value + keyValue);
                    }
                }

                self.CashInserted = function (item, event) {
                    var cashValue = Number($(event.currentTarget).attr('data-value'))
                    var value = self.BalancePaid() ? self.BalancePaid() : 0;
                    self.BalancePaid(value + cashValue);
                }

                self.GetProduct = function (id) {
                    $.getJSON(options.getProductUrl, { id: id })
                        .done(function (data) {
                            self.EnteredProductCode(null);
                            self.SelectedProduct(data);
                        }).fail(function (error) {
                            self.HasError(true);
                            self.ErrorMessage(error.responseText);
                        });
                }

                self.GetProducts = function () {
                    $.getJSON(options.getProductsUrl)
                        .done(function (data) {
                            self.Products(data);
                        }).fail(function (error) {
                            self.HasError(true);
                            self.ErrorMessage(error.responseText);
                        });
                }

                self.Cancel = function () {
                    self.BalancePaid(0);
                    self.CreditCardNo(null);
                };

                self.Pay = function () {
                    self.HasPurchased(false);
                    self.HasError(false);
                    if (!self.SelectedProduct()) {
                        return;
                    }
                    var payment = {
                        CreditCardNo: self.CreditCardNo(),
                        Cash: self.BalancePaid(),
                        ProductId: self.SelectedProduct().Id
                    };
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify(payment),
                        url: options.payProductUrl,
                        contentType: "application/json"
                    }).done(function (result) {
                        self.HasPurchased(true);
                        self.PurchaseMessage(result);
                        self.BalancePaid(0);
                        self.CreditCardNo(null);
                    }).fail(function (error) {
                        self.HasError(true);
                        self.ErrorMessage(error.responseText);
                    });
                };

                self.GetProducts();

            }
            ko.applyBindings(new productViewModel({
                getProductsUrl: appFolder + 'api/products',
                getProductUrl: appFolder + 'api/products',
                payProductUrl: appFolder + 'api/products'
            }));
        });
    </script>
}
